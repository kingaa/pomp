
R version 3.4.1 (2017-06-30) -- "Single Candle"
Copyright (C) 2017 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(pomp)
> library(ggplot2)
> library(plyr)
> library(reshape2)
> library(magrittr)
> 
> set.seed(49596868L)
> 
> png(filename="dp-%02d.png",res=100)
> 
> create_example <- function(times = 1, t0 = 0, mu = 0.001, N_0 = 1,
+                            simulator = c("gillespie","euler","onestep")) {
+     data <- data.frame(time = times, reports = NA)
+     d <- cbind(death = c(1,0))
+     v <- cbind(death = c(-1,1))
+     simulator <- match.arg(simulator)
+     switch(
+         simulator,
+         gillespie=gillespie.sim(
+             Csnippet("rate = mu * N;"),
+             v = v, d = d
+         ),
+         euler=euler.sim(
+             Csnippet("double x = rbinom(N,1-exp(-mu*dt)); N -= x; ct += x;"),
+             delta.t=0.1
+         ),
+         onestep=onestep.sim(
+             Csnippet("double x = rbinom(N,1-exp(-mu*dt)); N -= x; ct += x;")
+         )
+     ) -> rprocess
+     initializer <- function(params, t0, ...) {
+         c(N=N_0,ct=12)
+     }
+     pomp(data = data, times = "time", t0 = t0, params = c(mu=mu),
+          rprocess = rprocess, initializer = initializer, zeronames="ct",
+          paramnames=c("mu"), statenames=c("N","ct"))
+ }
> 
> create_example(simulator="gillespie",times=c(0,1,10,100,1000)) %>%
+     simulate(as.data.frame=TRUE, states=TRUE, nsim = 1000) %>%
+     count(~time+N) %>%
+     ddply(~time,mutate,freq=freq/sum(freq)) %>%
+     dcast(time~N,value.var="freq")
  time     0     1
1    0    NA 1.000
2    1    NA 1.000
3   10 0.005 0.995
4  100 0.091 0.909
5 1000 0.655 0.345
> create_example(times=seq(0,5,by=0.2),mu=0.01,N_0=100) %>%
+     simulate(nsim=100,as.data.frame=TRUE, states=TRUE) -> sims
> sims %>%
+     subset(sim<=4) %>%
+     melt(id=c("time","sim")) %>%
+     ggplot(aes(x=time,y=value,group=interaction(sim,variable)))+
+     geom_step()+
+     facet_grid(variable~sim,scales="free_y")+
+     labs(title="death process, Gillespie",subtitle=expression(mu==0.01))
> stopifnot(sims %>% ddply(~sim,mutate,s=cumsum(ct),Nn=(N+s)==100) %>%
+           subset(!Nn) %>% nrow() %>% equals(0))
> 
> create_example(simulator="onestep",times=c(0,1,10,100,1000)) %>%
+     simulate(as.data.frame=TRUE, states=TRUE, nsim = 1000) %>%
+     count(~time+N) %>%
+     ddply(~time,mutate,freq=freq/sum(freq)) %>%
+     dcast(time~N,value.var="freq")
  time     0     1
1    0    NA 1.000
2    1 0.001 0.999
3   10 0.011 0.989
4  100 0.101 0.899
5 1000 0.656 0.344
> create_example(simulator="onestep",
+                times=seq(0,5,by=0.2),mu=0.01,N_0=100) %>%
+     simulate(nsim=100,as.data.frame=TRUE, states=TRUE) -> sims
> sims %>%
+     subset(sim<=4) %>%
+     melt(id=c("time","sim")) %>%
+     ggplot(aes(x=time,y=value,group=interaction(sim,variable)))+
+     geom_step()+
+     facet_grid(variable~sim,scales="free_y")+
+     labs(title="death process, onestep",subtitle=expression(mu==0.01))
> stopifnot(sims %>% ddply(~sim,mutate,s=cumsum(ct),Nn=(N+s)==100) %>%
+           subset(!Nn) %>% nrow() %>% equals(0))
> 
> create_example(simulator="euler",times=c(0,1,10,100,1000)) %>%
+     simulate(as.data.frame=TRUE, states=TRUE, nsim = 1000) %>%
+     count(~time+N) %>%
+     ddply(~time,mutate,freq=freq/sum(freq)) %>%
+     dcast(time~N,value.var="freq")
  time     0     1
1    0    NA 1.000
2    1 0.005 0.995
3   10 0.018 0.982
4  100 0.118 0.882
5 1000 0.645 0.355
> create_example(simulator="euler",
+                times=seq(0,5,by=0.2),mu=0.01,N_0=100) %>%
+     simulate(nsim=100,as.data.frame=TRUE, states=TRUE) -> sims
> sims %>%
+     subset(sim<=4) %>%
+     melt(id=c("time","sim")) %>%
+     ggplot(aes(x=time,y=value,group=interaction(sim,variable)))+
+     geom_step()+
+     facet_grid(variable~sim,scales="free_y")+
+     labs(title="death process, Euler",subtitle=expression(mu==0.01))
> stopifnot(sims %>% ddply(~sim,mutate,s=cumsum(ct),Nn=(N+s)==100) %>%
+           subset(!Nn) %>% nrow() %>% equals(0))
> 
> create_example(mu=1) %>%
+   simulate(as.data.frame=TRUE, states=TRUE, times = c(1), nsim = 1000, seed=1066) %>%
+   count(~N)
  N freq
1 0  631
2 1  369
> create_example(mu=1) %>%
+   simulate(as.data.frame=TRUE, states=TRUE, times = c(0,1), nsim = 1000, seed=1066) %>%
+   subset(time>0) %>%
+   count(~N)
  N freq
1 0  640
2 1  360
> create_example() %>%
+   simulate(as.data.frame=TRUE, states=TRUE, times = c(1e4), nsim = 10000, seed=1066) %>%
+   count(~N)
  N freq
1 0 9999
2 1    1
> 
> create_example(N_0=1000,mu=0.02,simulator="gillespie",
+   times=-1/0.02*log(c(1,0.8,0.6,0.4,0.2,0.01))) %>%
+   simulate(as.data.frame=TRUE, states=TRUE, nsim = 1000, seed=374244) %>%
+   ggplot(aes(x=N,group=time))+
+   geom_histogram(aes(y=..density..),binwidth=10)+
+   labs(title="death process, Gillespie",subtitle=expression(mu==0.02))+
+   facet_grid(time~.,labeller=label_bquote(t==.(signif(time,3))))+
+   theme(strip.text=element_text(size=6))
> 
> create_example(N_0=1000,mu=0.02,simulator="onestep",
+   times=-1/0.02*log(c(1,0.8,0.6,0.4,0.2,0.01))) %>%
+   simulate(as.data.frame=TRUE, states=TRUE, nsim = 1000, seed=374244) %>%
+   ggplot(aes(x=N,group=time))+
+   geom_histogram(aes(y=..density..),binwidth=10)+
+   labs(title="death process, onestep",subtitle=expression(mu==0.02))+
+   facet_grid(time~.,labeller=label_bquote(t==.(signif(time,3))))+
+   theme(strip.text=element_text(size=6))
> 
> create_example(N_0=1000,mu=0.02,simulator="euler",
+   times=-1/0.02*log(c(1,0.8,0.6,0.4,0.2,0.01))) %>%
+   simulate(as.data.frame=TRUE, states=TRUE, nsim = 1000, seed=374244) %>%
+   ggplot(aes(x=N,group=time))+
+   geom_histogram(aes(y=..density..),binwidth=10)+
+   labs(title="death process, Euler",subtitle=expression(mu==0.02))+
+   facet_grid(time~.,labeller=label_bquote(t==.(signif(time,3))))+
+   theme(strip.text=element_text(size=6))
> 
> dev.off()
null device 
          1 
> 
> 
